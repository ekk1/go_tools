___SPLITTER_ORIGINAL___5LiL6Z2i5piv5LiA5Liq5L2g5LmL5YmN57uZ55qEIHZpbXJjIOaWh+S7tu+8jOS9huaYr+i/mOaYr+aciemXrumimO+8jOivt+S7lOe7huaOkuafpQoKYGBgdmltcmMK___SPLITTER_ORIGINAL___IiBDYWxsYmFjayBmdW5jdGlvbiB0byBwcm9jZXNzIExTUCBzZXJ2ZXIgcmVzcG9uc2VzCmZ1bmN0aW9uISBzOkxzcE91dENhbGxiYWNrKGNoYW5uZWwsIGpzb24pIGFib3J0CiAgaWYgZW1wdHkoYTpqc29uKQogICAgcmV0dXJuCiAgZW5kaWYKCiAgaWYgaGFzX2tleShhOmpzb24sICdtZXRob2QnKQogICAgaWYgYTpqc29uLm1ldGhvZCA9PSAndGV4dERvY3VtZW50L3B1Ymxpc2hEaWFnbm9zdGljcycKICAgICAgZWNob20gJ0RpYWdub3N0aWNzOiAnIC4gc3RyaW5nKGE6anNvbi5wYXJhbXMuZGlhZ25vc3RpY3MpCiAgICBlbHNlaWYgYTpqc29uLm1ldGhvZCA9PSAnd2luZG93L3Nob3dNZXNzYWdlJwogICAgICBlY2hvbSAnTFNQIE1lc3NhZ2U6ICcgLiBzdHJpbmcoYTpqc29uLnBhcmFtcy5tZXNzYWdlKQogICAgZW5kaWYKICBlbHNlaWYgaGFzX2tleShhOmpzb24sICdpZCcpCiAgICBpZiBoYXNfa2V5KGE6anNvbiwgJ3Jlc3VsdCcpCiAgICAgIGNhbGwgczpMc3BDb21wbGV0ZUNhbGxiYWNrKGE6anNvbi5yZXN1bHQpCiAgICBlbHNlaWYgaGFzX2tleShhOmpzb24sICdlcnJvcicpCiAgICAgIGVjaG9tICdMU1AgRXJyb3I6ICcgLiBzdHJpbmcoYTpqc29uLmVycm9yKQogICAgZW5kaWYKICBlbmRpZgplbmRmdW5jdGlvbgoKZnVuY3Rpb24hIHM6THNwRXJyQ2FsbGJhY2soY2hhbm5lbCwgbXNnKSBhYm9ydAogIGVjaG9tICdMU1AgRXJyb3I6ICcgLiBhOm1zZwplbmRmdW5jdGlvbgoKZnVuY3Rpb24hIHM6THNwRXhpdENhbGxiYWNrKGNoYW5uZWwsIHN0YXR1cykgYWJvcnQKICBlY2hvbSAnTFNQIFNlcnZlciBleGl0ZWQgd2l0aCBjb2RlICcgLiBhOnN0YXR1cwplbmRmdW5jdGlvbgoKZnVuY3Rpb24hIHM6THNwQ29tcGxldGVDYWxsYmFjayhyZXN1bHQpIGFib3J0CiAgaWYgaGFzX2tleShhOnJlc3VsdCwgJ2l0ZW1zJykKICAgIGxldCBsOml0ZW1zID0gYTpyZXN1bHQuaXRlbXMKICAgIGxldCBsOm1hdGNoZXMgPSBbXQoKICAgIGZvciBsOml0ZW0gaW4gbDppdGVtcwogICAgICBsZXQgbDpsYWJlbCA9IGdldChsOml0ZW0sICdsYWJlbCcsICcnKQogICAgICBsZXQgbDpkZXRhaWwgPSBnZXQobDppdGVtLCAnZGV0YWlsJywgJycpCiAgICAgIGxldCBsOmRvY3VtZW50YXRpb24gPSBnZXQobDppdGVtLCAnZG9jdW1lbnRhdGlvbicsICcnKQoKICAgICAgY2FsbCBhZGQobDptYXRjaGVzLCB7CiAgICAgICAgICAgIFwgJ3dvcmQnOiBsOmxhYmVsLAogICAgICAgICAgICBcICdhYmJyJzogbDpsYWJlbCwKICAgICAgICAgICAgXCAnbWVudSc6ICh0eXBlKGw6ZGV0YWlsKSA9PSB2OnRfZGljdCA/IHN0cmluZyhsOmRldGFpbCkgOiBsOmRldGFpbCksCiAgICAgICAgICAgIFwgJ2luZm8nOiAodHlwZShsOmRvY3VtZW50YXRpb24pID09IHY6dF9kaWN0ID8gc3RyaW5nKGw6ZG9jdW1lbnRhdGlvbikgOiBsOmRvY3VtZW50YXRpb24pLAogICAgICAgICAgICBcIH0pCiAgICBlbmRmb3IKCiAgICBpZiAhZW1wdHkobDptYXRjaGVzKQogICAgICBjYWxsIGNvbXBsZXRlKGNvbCgnLicpIC0gMSwgbDptYXRjaGVzKQogICAgZW5kaWYKCiAgZWxzZQogICAgZWNob20gJ0xTUCBjb21wbGV0aW9uOiBObyBpdGVtcyBmb3VuZC4nCiAgZW5kaWYKICBsZXQgYjpjb21wbGV0aW9uX29uZ29pbmcgPSAwCmVuZGZ1bmN0aW9uCgpmdW5jdGlvbiEgczpMc3BDb21wbGV0ZUZpbmQoZmluZHN0YXJ0LCBiYXNlKSBhYm9ydAogIGlmIGE6ZmluZHN0YXJ0CiAgICAiIFJldHVybiB0aGUgcG9zaXRpb24gb2YgdGhlIHN0YXJ0IG9mIHRoZSB3b3JkCiAgICBsZXQgbDpsaW5lID0gZ2V0bGluZSgnLicpCiAgICBsZXQgbDpzdGFydCA9IGNvbCgnLicpIC0gMQogICAgd2hpbGUgbDpzdGFydCA+IDAgJiYgbDpsaW5lW2w6c3RhcnQgLSAxXSA9fiMgJ1xrJwogICAgICBsZXQgbDpzdGFydCAtPSAxCiAgICBlbmR3aGlsZQogICAgcmV0dXJuIGw6c3RhcnQKICBlbHNlCiAgICAiIFNlbmQgY29tcGxldGlvbiByZXF1ZXN0IHRvIExTUCBzZXJ2ZXIKICAgIGlmICFleGlzdHMoJ2I6bHNwX2NoYW5uZWwnKQogICAgICByZXR1cm4gW10KICAgIGVuZGlmCiAgICAKICAgICIgQXZvaWQgZHVwbGljYXRlIGNvbXBsZXRpb24gcmVxdWVzdHMKICAgIGlmIGV4aXN0cygnYjpjb21wbGV0aW9uX29uZ29pbmcnKSAmJiBiOmNvbXBsZXRpb25fb25nb2luZwogICAgICByZXR1cm4gW10KICAgIGVuZGlmCgogICAgbGV0IGI6Y29tcGxldGlvbl9vbmdvaW5nID0gMQogICAgCiAgICBsZXQgbDpyZXEgPSB7CiAgICAgICAgICBcICdqc29ucnBjJzogJzIuMCcsCiAgICAgICAgICBcICdtZXRob2QnOiAndGV4dERvY3VtZW50L2NvbXBsZXRpb24nLAogICAgICAgICAgXCAnaWQnOiA5OTksCiAgICAgICAgICBcICdwYXJhbXMnOiB7CiAgICAgICAgICBcICAgICAndGV4dERvY3VtZW50Jzogeyd1cmknOiAnZmlsZTovLycgLiBleHBhbmQoJyU6cCcpfSwKICAgICAgICAgIFwgICAgICdwb3NpdGlvbic6IHsnbGluZSc6IGxpbmUoJy4nKSAtIDEsICdjaGFyYWN0ZXInOiBjb2woJy4nKSAtIDF9CiAgICAgICAgICBcICAgICB9CiAgICAgICAgICBcIH0KICAgIGNhbGwgY2hfc2VuZGV4cHIoYjpsc3BfY2hhbm5lbCwgbDpyZXEsICN7Y2FsbGJhY2s6IGZ1bmN0aW9uKCdzOkxzcENvbXBsZXRlQ2FsbGJhY2snKX0pCiAgICByZXR1cm4gW10KICBlbmRpZgplbmRmdW5jdGlvbgoKYXVncm91cCBMc3BHb2xhbmcKICBhdXRvY21kIQogIGF1dG9jbWQgRmlsZVR5cGUgZ28gY2FsbCBzOlNldHVwR29sYW5nTHNwKCkKYXVncm91cCBFTkQKCmZ1bmN0aW9uISBzOlNldHVwR29sYW5nTHNwKCkgYWJvcnQKICBpZiBleGlzdHMoJ2I6bHNwX2NoYW5uZWwnKQogICAgY2FsbCBqb2Jfc3RvcChiOmxzcF9jaGFubmVsKQogIGVuZGlmCgogIHNpbGVudCEgbGV0IGI6bHNwX2NoYW5uZWwgPSBqb2Jfc3RhcnQoWydnb3BscyddLCB7CiAgICAgICAgXCAnaW5fbW9kZSc6ICdsc3AnLAogICAgICAgIFwgJ291dF9tb2RlJzogJ2xzcCcsCiAgICAgICAgXCAnZXJyX21vZGUnOiAnbmwnLAogICAgICAgIFwgJ291dF9jYic6IGZ1bmN0aW9uKCdzOkxzcE91dENhbGxiYWNrJyksCiAgICAgICAgXCAnZXJyX2NiJzogZnVuY3Rpb24oJ3M6THNwRXJyQ2FsbGJhY2snKSwKICAgICAgICBcICdleGl0X2NiJzogZnVuY3Rpb24oJ3M6THNwRXhpdENhbGxiYWNrJykKICAgICAgICBcIH0pCgogIGxldCBsOmluaXRfcmVxID0gewogICAgICAgIFwgJ2pzb25ycGMnOiAnMi4wJywKICAgICAgICBcICdtZXRob2QnOiAnaW5pdGlhbGl6ZScsCiAgICAgICAgXCAnaWQnOiAxLAogICAgICAgIFwgJ3BhcmFtcyc6IHsKICAgICAgICBcICAgICAncHJvY2Vzc0lkJzogZ2V0cGlkKCksCiAgICAgICAgXCAgICAgJ3Jvb3RVcmknOiAnZmlsZTovLycgLiBnZXRjd2QoKSwKICAgICAgICBcICAgICAnY2FwYWJpbGl0aWVzJzogewogICAgICAgIFwgICAgICAgICAndGV4dERvY3VtZW50JzogewogICAgICAgIFwgICAgICAgICAgICAgJ2NvbXBsZXRpb24nOiB7J2R5bmFtaWNSZWdpc3RyYXRpb24nOiB2OmZhbHNlfSwKICAgICAgICBcICAgICAgICAgICAgICdob3Zlcic6IHt9LAogICAgICAgIFwgICAgICAgICAgICAgJ2RlZmluaXRpb24nOiB7fX0sCiAgICAgICAgXCAgICAgICAgICd3b3Jrc3BhY2UnOiB7CiAgICAgICAgXCAgICAgICAgICAgICAnd29ya3NwYWNlRm9sZGVycyc6IHY6ZmFsc2UKICAgICAgICBcICAgICAgICAgICAgIH0KICAgICAgICBcICAgICAgICAgfQogICAgICAgIFwgICAgIH0KICAgICAgICBcIH0KCiAgY2FsbCBjaF9zZW5kZXhwcihiOmxzcF9jaGFubmVsLCBsOmluaXRfcmVxLCAje2NhbGxiYWNrOiBmdW5jdGlvbignczpIYW5kbGVJbml0UmVzcG9uc2UnKX0pCiAgc2V0bG9jYWwgb21uaWZ1bmM9czpMc3BDb21wbGV0ZUZpbmQKZW5kZnVuY3Rpb24KCmZ1bmN0aW9uISBzOkhhbmRsZUluaXRSZXNwb25zZShjaGFubmVsLCByZXNwb25zZSkgYWJvcnQKICBpZiBoYXNfa2V5KGE6cmVzcG9uc2UsICdyZXN1bHQnKQogICAgZWNob20gJ0xTUCBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHkhJwogICAgbGV0IGw6bm90aWZ5X3JlcSA9IHsnanNvbnJwYyc6ICcyLjAnLCAnbWV0aG9kJzogJ2luaXRpYWxpemVkJywgJ3BhcmFtcyc6IHY6bnVsbH0KICAgIGNhbGwgY2hfc2VuZGV4cHIoYTpjaGFubmVsLCBsOm5vdGlmeV9yZXEpCiAgZWxzZQogICAgZWNob20gJ0xTUCBpbml0aWFsaXphdGlvbiBmYWlsZWQ6ICcgLiBzdHJpbmcoYTpyZXNwb25zZSkKICBlbmRpZgplbmRmdW5jdGlvbgoKYXVncm91cCBMc3BBdXRvQ29tcGxldGUKICBhdXRvY21kIQogICIgVHJpZ2dlciBvbW5pIGNvbXBsZXRpb24gb24gaW5zZXJ0aW5nIGFueSBjaGFyYWN0ZXIgaWYgJm9tbmlmdW5jIGlzIG91ciBjdXN0b20KICBhdXRvY21kIEluc2VydENoYXJQcmUgKiBpZiAmb21uaWZ1bmMgPT0jICdzOkxzcENvbXBsZXRlRmluZCcgJiYgKCFleGlzdHMoJ2I6Y29tcGxldGlvbl9vbmdvaW5nJykgfHwgIWI6Y29tcGxldGlvbl9vbmdvaW5nKSB8IGNhbGwgZmVlZGtleXMoIlw8Qy14Plw8Qy1vPiIsICduJykgfCBlbmRpZgogICIgUmVzZXQgY29tcGxldGlvbl9vbmdvaW5nIGZsYWcgb24gY29tcGxldGlvbiBlbmQKICBhdXRvY21kIENvbXBsZXRlRG9uZSAqIGlmIGV4aXN0cygnYjpjb21wbGV0aW9uX29uZ29pbmcnKSAmJiBiOmNvbXBsZXRpb25fb25nb2luZyB8IGxldCBiOmNvbXBsZXRpb25fb25nb2luZyA9IDAgfCBlbmRpZgphdWdyb3VwIEVORAo=___SPLITTER_ORIGINAL___YGBgCuaKpemUmeS6hgpFMTE4OiBUb28gbWFueSBhcmd1bWVudHMgZm9yIGZ1bmN0aW9uOiA8U05SPjJfTHNwQ29tcGxldGVDYWxsYmFjawrlpJrmo4Dmn6Xmo4Dmn6UKCmRvbid0IHJldHVybiB0aGUgd2hvbGUgdmltcmMsIG9ubHkgcmV0dXJuIGNoYW5nZWQgcGFydHM=___SPLITTER_TEMP______SPLITTER_FINAL___5aW955qE77yM5oiR5Lus5YWI5p2l5om+5Ye66Zeu6aKY5bm25YGa5Ye66LCD5pW044CC5Zyo5L2g55qEIFZpbSDohJrmnKzkuK3vvIxgTHNwQ29tcGxldGVDYWxsYmFja2Ag5Ly85LmO5Zyo5L2c5Li65byC5q2l5Zue6LCD5Ye95pWw5pe25o6l5Y+X5LqG5LiA5Liq6aKd5aSW55qE5Y+C5pWw44CC5Li65LqG56Gu5L+d5Zue6LCD5Ye95pWw6LCD55So5q2j56Gu77yM5oiR5Lus5Y+q6ZyA6K6pIGBMc3BDb21wbGV0ZUNhbGxiYWNrYCDmjqXlj5fkuIDkuKrlj4LmlbDjgIIKCuatpOWklu+8jOaIkeS7rOmcgOimgeehruS/nSBgb21uaWZ1bmNgIOiuvue9ruato+ehru+8jOS7peWPiuWIneWni+WMluivt+axguWQjuato+ehruWTjeW6lExTUOacjeWKoeWZqOOAggoK5Lul5LiL5piv5L+u5pS55ZCO55qE5YWz6ZSu6YOo5YiG77yaCgojIyMg5L+u5pS55ZCO55qEIGBMc3BDb21wbGV0ZUNhbGxiYWNrYCDlh73mlbAK56Gu5L+dIGBzOkxzcENvbXBsZXRlQ2FsbGJhY2tgIOWHveaVsOWPquaOpeWPl+S4gOS4quWPguaVsO+8mgoKYGBgdmltCmZ1bmN0aW9uISBzOkxzcENvbXBsZXRlQ2FsbGJhY2socmVzdWx0KSBhYm9ydAogIGlmIGhhc19rZXkoYTpyZXN1bHQsICdpdGVtcycpCiAgICBsZXQgbDppdGVtcyA9IGE6cmVzdWx0Lml0ZW1zCiAgICBsZXQgbDptYXRjaGVzID0gW10KCiAgICBmb3IgbDppdGVtIGluIGw6aXRlbXMKICAgICAgbGV0IGw6bGFiZWwgPSBnZXQobDppdGVtLCAnbGFiZWwnLCAnJykKICAgICAgbGV0IGw6ZGV0YWlsID0gZ2V0KGw6aXRlbSwgJ2RldGFpbCcsICcnKQogICAgICBsZXQgbDpkb2N1bWVudGF0aW9uID0gZ2V0KGw6aXRlbSwgJ2RvY3VtZW50YXRpb24nLCAnJykKCiAgICAgIGNhbGwgYWRkKGw6bWF0Y2hlcywgewogICAgICAgICAgICBcICd3b3JkJzogbDpsYWJlbCwKICAgICAgICAgICAgXCAnYWJicic6IGw6bGFiZWwsCiAgICAgICAgICAgIFwgJ21lbnUnOiAodHlwZShsOmRldGFpbCkgPT0gdjp0X2RpY3QgPyBzdHJpbmcobDpkZXRhaWwpIDogbDpkZXRhaWwpLAogICAgICAgICAgICBcICdpbmZvJzogKHR5cGUobDpkb2N1bWVudGF0aW9uKSA9PSB2OnRfZGljdCA/IHN0cmluZyhsOmRvY3VtZW50YXRpb24pIDogbDpkb2N1bWVudGF0aW9uKSwKICAgICAgICAgICAgXCB9KQogICAgZW5kZm9yCgogICAgaWYgIWVtcHR5KGw6bWF0Y2hlcykKICAgICAgY2FsbCBjb21wbGV0ZShjb2woJy4nKSAtIDEsIGw6bWF0Y2hlcykKICAgIGVuZGlmCgogIGVsc2UKICAgIGVjaG9tICdMU1AgY29tcGxldGlvbjogTm8gaXRlbXMgZm91bmQuJwogIGVuZGlmCiAgbGV0IGI6Y29tcGxldGlvbl9vbmdvaW5nID0gMAplbmRmdW5jdGlvbgpgYGAKCiMjIyDkv67mlLnlkI7nmoTlvILmraXliJ3lp4vljJblkozliJ3lp4vljJblk43lupQK56Gu5L+dIGBzOkhhbmRsZUluaXRSZXNwb25zZWAg5Ye95pWw6IO95q2j56Gu5aSE55CG6L+U5Zue77yaCgpgYGB2aW0KZnVuY3Rpb24hIHM6SGFuZGxlSW5pdFJlc3BvbnNlKGNoYW5uZWwsIHJlc3BvbnNlKSBhYm9ydAogIGlmIGhhc19rZXkoYTpyZXNwb25zZSwgJ3Jlc3VsdCcpCiAgICBlY2hvbSAnTFNQIGluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSEnCiAgICBsZXQgbDpub3RpZnlfcmVxID0geydqc29ucnBjJzogJzIuMCcsICdtZXRob2QnOiAnaW5pdGlhbGl6ZWQnLCAncGFyYW1zJzogdjpudWxsfQogICAgY2FsbCBjaF9zZW5kZXhwcihhOmNoYW5uZWwsIGw6bm90aWZ5X3JlcSkKICBlbHNlCiAgICBlY2hvbSAnTFNQIGluaXRpYWxpemF0aW9uIGZhaWxlZDogJyAuIHN0cmluZyhhOnJlc3BvbnNlKQogIGVuZGlmCmVuZGZ1bmN0aW9uCmBgYAoKIyMjIOiwg+aVtCBgY2hfc2VuZGV4cHJgIOiwg+eUqArnoa7kv53miYDmnInnmoQgYGNoX3NlbmRleHByYCDosIPnlKjkvb/nlKjpgILlvZPnmoTlm57osIPlh73mlbDvvJoKCmBgYHZpbQpmdW5jdGlvbiEgczpMc3BDb21wbGV0ZUZpbmQoZmluZHN0YXJ0LCBiYXNlKSBhYm9ydAogIGlmIGE6ZmluZHN0YXJ0CiAgICAiIFJldHVybiB0aGUgcG9zaXRpb24gb2YgdGhlIHN0YXJ0IG9mIHRoZSB3b3JkCiAgICBsZXQgbDpsaW5lID0gZ2V0bGluZSgnLicpCiAgICBsZXQgbDpzdGFydCA9IGNvbCgnLicpIC0gMQogICAgd2hpbGUgbDpzdGFydCA+IDAgJiYgbDpsaW5lW2w6c3RhcnQgLSAxXSA9fiMgJ1xrJwogICAgICBsZXQgbDpzdGFydCAtPSAxCiAgICBlbmR3aGlsZQogICAgcmV0dXJuIGw6c3RhcnQKICBlbHNlCiAgICAiIFNlbmQgY29tcGxldGlvbiByZXF1ZXN0IHRvIExTUCBzZXJ2ZXIKICAgIGlmICFleGlzdHMoJ2I6bHNwX2NoYW5uZWwnKQogICAgICByZXR1cm4gW10KICAgIGVuZGlmCiAgICAKICAgICIgQXZvaWQgZHVwbGljYXRlIGNvbXBsZXRpb24gcmVxdWVzdHMKICAgIGlmIGV4aXN0cygnYjpjb21wbGV0aW9uX29uZ29pbmcnKSAmJiBiOmNvbXBsZXRpb25fb25nb2luZwogICAgICByZXR1cm4gW10KICAgIGVuZGlmCgogICAgbGV0IGI6Y29tcGxldGlvbl9vbmdvaW5nID0gMQogICAgCiAgICBsZXQgbDpyZXEgPSB7CiAgICAgICAgICBcICdqc29ucnBjJzogJzIuMCcsCiAgICAgICAgICBcICdtZXRob2QnOiAndGV4dERvY3VtZW50L2NvbXBsZXRpb24nLAogICAgICAgICAgXCAnaWQnOiA5OTksCiAgICAgICAgICBcICdwYXJhbXMnOiB7CiAgICAgICAgICBcICAgICAndGV4dERvY3VtZW50Jzogeyd1cmknOiAnZmlsZTovLycgLiBleHBhbmQoJyU6cCcpfSwKICAgICAgICAgIFwgICAgICdwb3NpdGlvbic6IHsnbGluZSc6IGxpbmUoJy4nKSAtIDEsICdjaGFyYWN0ZXInOiBjb2woJy4nKSAtIDF9CiAgICAgICAgICBcICAgICB9CiAgICAgICAgICBcIH0KICAgIGNhbGwgY2hfc2VuZGV4cHIoYjpsc3BfY2hhbm5lbCwgbDpyZXEsICN7Y2FsbGJhY2s6IGZ1bmN0aW9uKCdzOkxzcE91dENhbGxiYWNrJyl9KQogICAgcmV0dXJuIFtdCiAgZW5kaWYKZW5kZnVuY3Rpb24KYGBgCgojIyMg56Gu5L+d5byC5q2l5Yid5aeL5YyW6K+35rGC5ZCO5q2j56Gu5ZON5bqUIExTUCDmnI3liqHlmagK56Gu5L+d5Zyo6aaW5qyh5Yid5aeL5YyW6K+35rGC5LmL5ZCO77yM5q2j56Gu6K6+572uIGBvbW5pZnVuY2DvvJoKCmBgYHZpbQpmdW5jdGlvbiEgczpTZXR1cEdvbGFuZ0xzcCgpIGFib3J0CiAgaWYgZXhpc3RzKCdiOmxzcF9jaGFubmVsJykKICAgIGNhbGwgam9iX3N0b3AoYjpsc3BfY2hhbm5lbCkKICBlbmRpZgoKICBzaWxlbnQhIGxldCBiOmxzcF9jaGFubmVsID0gam9iX3N0YXJ0KFsnZ29wbHMnXSwgewogICAgICAgIFwgJ2luX21vZGUnOiAnbHNwJywKICAgICAgICBcICdvdXRfbW9kZSc6ICdsc3AnLAogICAgICAgIFwgJ2Vycl9tb2RlJzogJ25sJywKICAgICAgICBcICdvdXRfY2InOiBmdW5jdGlvbignczpMc3BPdXRDYWxsYmFjaycpLAogICAgICAgIFwgJ2Vycl9jYic6IGZ1bmN0aW9uKCdzOkxzcEVyckNhbGxiYWNrJyksCiAgICAgICAgXCAnZXhpdF9jYic6IGZ1bmN0aW9uKCdzOkxzcEV4aXRDYWxsYmFjaycpCiAgICAgICAgXCB9KQoKICBsZXQgbDppbml0X3JlcSA9IHsKICAgICAgICBcICdqc29ucnBjJzogJzIuMCcsCiAgICAgICAgXCAnbWV0aG9kJzogJ2luaXRpYWxpemUnLAogICAgICAgIFwgJ2lkJzogMSwKICAgICAgICBcICdwYXJhbXMnOiB7CiAgICAgICAgXCAgICAgJ3Byb2Nlc3NJZCc6IGdldHBpZCgpLAogICAgICAgIFwgICAgICdyb290VXJpJzogJ2ZpbGU6Ly8nIC4gZ2V0Y3dkKCksCiAgICAgICAgXCAgICAgJ2NhcGFiaWxpdGllcyc6IHsKICAgICAgICBcICAgICAgICAgJ3RleHREb2N1bWVudCc6IHsKICAgICAgICBcICAgICAgICAgICAgICdjb21wbGV0aW9uJzogeydkeW5hbWljUmVnaXN0cmF0aW9uJzogdjpmYWxzZX0sCiAgICAgICAgXCAgICAgICAgICAgICAnaG92ZXInOiB7fSwKICAgICAgICBcICAgICAgICAgICAgICdkZWZpbml0aW9uJzoge319LAogICAgICAgIFwgICAgICAgICAnd29ya3NwYWNlJzogewogICAgICAgIFwgICAgICAgICAgICAgJ3dvcmtzcGFjZUZvbGRlcnMnOiB2OmZhbHNlCiAgICAgICAgXCAgICAgICAgICAgICB9CiAgICAgICAgXCAgICAgICAgIH0KICAgICAgICBcICAgICB9CiAgICAgICAgXCB9CgogIGNhbGwgY2hfc2VuZGV4cHIoYjpsc3BfY2hhbm5lbCwgbDppbml0X3JlcSwgI3tjYWxsYmFjazogZnVuY3Rpb24oJ3M6SGFuZGxlSW5pdFJlc3BvbnNlJyl9KQogIHNldGxvY2FsIG9tbmlmdW5jPXM6THNwQ29tcGxldGVGaW5kCmVuZGZ1bmN0aW9uCmBgYAoK6YCa6L+H6L+Z5Lqb6LCD5pW077yM5LiK6L+w6Zeu6aKY5bqU6K+l6IO95aSf5b6X5Yiw6Kej5Yaz77yM6ICM5LiU5Y+v5Lul5q2j56Gu5o6l5YWlIGBnb3Bsc2Ag5p2l5a6M5oiQIEdvbGFuZyDku6PnoIHnmoToh6rliqjooaXlhajjgILor5Xor5XnnIvvvIzlpoLmnpzmnInlhbbku5bpl67popjor7flho3lkYror4nmiJHjgIIKW1tbRE9ORV1dXQo=