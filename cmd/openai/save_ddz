___SPLITTER_ORIGINAL___YGBgCgrov5jmnInngrnpl67popgKCjEuIOS4ieS4queOqeWutuWKoOWFpeWQjua4uOaIj+ayoeacieW8gOWniwoK6K+35biu5oiR5L+u5pS55LiL5Luj56CB77yM5Y+q6L+U5Zue5L+u5pS555qE6YOo5YiG77yM5LiN6KaB6L+U5Zue5YWo6YOo55qE5Luj56CBCg==___SPLITTER_ORIGINAL______SPLITTER_ORIGINAL______SPLITTER_TEMP______SPLITTER_FINAL___5Zyo5L2g5o+Q5L6b55qE5Luj56CB5Lit77yM5ri45oiP5rKh5pyJ5byA5aeL55qE5Y6f5Zug5LmL5LiA5Y+v6IO95pivIGBzZWxmLnJvb20uc3RhcnRfZ2FtZSgpYCDmsqHmnInmraPnoa7lnLDooqvosIPnlKjmiJbogIXmiJDlip/lkK/liqjjgILkuLrkuobnoa7kv53ov5nkuIDngrnvvIzlnKggYFJvb21gIOexu+eahCBgYWRkX3BsYXllcmAg5pa55rOV5Lit6L+U5Zue5LiA5Liq5qCH5b+X77yM5Lul6KGo5piO546p5a625piv5ZCm5oiQ5Yqf5Yqg5YWl77yM5bm25Zyo546p5a625Yqg5YWl5ZCO56uL5Y2z5qOA5p+l5piv5ZCm6L6+5Yiw5LqG5byA5aeL5ri45oiP55qE5p2h5Lu244CCCgrku6XkuIvmmK/pnIDopoHkv67mlLnnmoTpg6jliIbvvJoKCjEuIOS/ruaUuSBgUm9vbWAg57G755qEIGBhZGRfcGxheWVyYCDmlrnms5XvvIzkvb/lhbbov5Tlm57luIPlsJTlgLzvvIzooajnpLrnjqnlrrbmmK/lkKbmiJDlip/liqDlhaXjgIIKMi4g5ZyoIGBTZXJ2ZXJgIOeahCBgaGFuZGxlX2NsaWVudGAg5pa55rOV5Lit77yM5qOA5p+l546p5a625oiQ5Yqf5Yqg5YWl5ZCO77yM56uL5Y2z5Yik5pat5piv5ZCm6L6+5Yiw5byA5aeL5ri45oiP55qE5p2h5Lu277yM5bm25ZCv5Yqo5ri45oiP44CCCgojIyMg5L+u5pS5IGBSb29tLmFkZF9wbGF5ZXJgIOaWueazle+8mgpgYGBweXRob24KZGVmIGFkZF9wbGF5ZXIoc2VsZiwgcGxheWVyKToKICAgIGlmIGxlbihzZWxmLnBsYXllcnMpIDwgMzoKICAgICAgICBmb3IgaSwgcGwgaW4gZW51bWVyYXRlKHNlbGYucGxheWVycyk6CiAgICAgICAgICAgIGlmIHBsLmlkID09IHBsYXllci5pZDoKICAgICAgICAgICAgICAgIHNlbGYucGxheWVyc1tpXSA9IHBsYXllcgogICAgICAgICAgICAgICAgcGxheWVyLmhhbmQgPSBwbC5oYW5kICAjIOaBouWkjeeOqeWutuaWree6v+WJjeeahOaJi+eJjAogICAgICAgICAgICAgICAgc2VsZi5icm9hZGNhc3QoZiJQbGF5ZXIge3BsYXllci5pZH0gcmVqb2luZWQgdGhlIHJvb20iKQogICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50X3BsYXllcigpLnNlbmRfbWVzc2FnZShmIkl0J3MgeW91ciB0dXJuIHRvIHBsYXkgY2FyZHMuIFlvdXIgaGFuZDogeycnLmpvaW4oc2VsZi5jdXJyZW50X3BsYXllcigpLmhhbmQpfSIpCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZSAgIyDkv67mlLnov5Tlm57lgLwKICAgICAgICBzZWxmLnBsYXllcnMuYXBwZW5kKHBsYXllcikKICAgICAgICBzZWxmLnBsYXllcl9jb3VudCArPSAxCiAgICAgICAgc2VsZi5icm9hZGNhc3QoZiJQbGF5ZXIge3BsYXllci5pZH0gam9pbmVkIHRoZSByb29tIikKICAgICAgICByZXR1cm4gVHJ1ZSAgIyDkv67mlLnov5Tlm57lgLwKICAgIGVsc2U6CiAgICAgICAgZm9yIGksIHBsIGluIGVudW1lcmF0ZShzZWxmLnBsYXllcnMpOgogICAgICAgICAgICBpZiBwbC5pZCA9PSBwbGF5ZXIuaWQ6CiAgICAgICAgICAgICAgICBzZWxmLnBsYXllcnNbaV0gPSBwbGF5ZXIKICAgICAgICAgICAgICAgIHBsYXllci5oYW5kID0gcGwuaGFuZCAgIyDmgaLlpI3njqnlrrbmlq3nur/liY3nmoTmiYvniYwKICAgICAgICAgICAgICAgIHNlbGYuYnJvYWRjYXN0KGYiUGxheWVyIHtwbGF5ZXIuaWR9IHJlam9pbmVkIHRoZSByb29tIikKICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudF9wbGF5ZXIoKS5zZW5kX21lc3NhZ2UoZiJJdCdzIHlvdXIgdHVybiB0byBwbGF5IGNhcmRzLiBZb3VyIGhhbmQ6IHsnJy5qb2luKHNlbGYuY3VycmVudF9wbGF5ZXIoKS5oYW5kKX0iKQogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUgICMg5L+u5pS56L+U5Zue5YC8CiAgICAgICAgIyBJZiBnYW1lIGFscmVhZHkgc3RhcnRlZCwgZG8gbm90IGFsbG93IG5ldyBwbGF5ZXJzIGFuZCBjbG9zZSBjb25uZWN0aW9uCiAgICAgICAgcGxheWVyLnNlbmRfbWVzc2FnZSgiR2FtZSBhbHJlYWR5IHN0YXJ0ZWQuIE5vIG5ldyBwbGF5ZXJzIGFsbG93ZWQuIikKICAgICAgICBwbGF5ZXIuY29ubi5jbG9zZSgpICAjIOeri+WNs+WFs+mXrei/nuaOpe+8jOmBv+WFjemUmeivrwogICAgICAgIHJldHVybiBGYWxzZSAgIyDkv67mlLnov5Tlm57lgLwKYGBgCgojIyMg5L+u5pS5IGBTZXJ2ZXIuaGFuZGxlX2NsaWVudGAg5pa55rOV77yaCmBgYHB5dGhvbgpkZWYgaGFuZGxlX2NsaWVudChzZWxmLCBjb25uLCBhZGRyKToKICAgIHNlbGYucGxheWVyX2NvdW50ICs9IDEKICAgIHBsYXllciA9IFBsYXllcihzZWxmLnBsYXllcl9jb3VudCwgY29ubiwgYWRkcikKICAgIAogICAgIyBDaGVjayBhbmQgYWRkIHBsYXllciBsb2dpYwogICAgYWRkZWRfc3VjY2Vzc2Z1bGx5ID0gc2VsZi5yb29tLmFkZF9wbGF5ZXIocGxheWVyKQoKICAgIGlmIG5vdCBhZGRlZF9zdWNjZXNzZnVsbHk6CiAgICAgICAgc2VsZi5wbGF5ZXJfY291bnQgLT0gMSAgIyDlpoLmnpzliqDlhaXlpLHotKXlh4/lsJHorqHmlbAKICAgICAgICByZXR1cm4KCiAgICBpZiBsZW4oc2VsZi5yb29tLnBsYXllcnMpID09IDM6ICAjIOajgOafpeeOqeWutuaVsOmHj+aYr+WQpui+vuWIsOS4ieS4qgogICAgICAgIGdhbWVfc3RhcnRlZCA9IHNlbGYucm9vbS5zdGFydF9nYW1lKCkKICAgICAgICBpZiBub3QgZ2FtZV9zdGFydGVkOgogICAgICAgICAgICBsb2dnaW5nLndhcm5pbmcoIkZhaWxlZCB0byBzdGFydCB0aGUgZ2FtZSIpCgogICAgd2hpbGUgVHJ1ZToKICAgICAgICB0cnk6CiAgICAgICAgICAgIG1lc3NhZ2UgPSBwbGF5ZXIucmVjZWl2ZV9tZXNzYWdlKCkKICAgICAgICAgICAgaWYgbWVzc2FnZSA9PSAnUScgb3IgbWVzc2FnZSA9PSAnTic6CiAgICAgICAgICAgICAgICBzZWxmLnJvb20uaGFuZGxlX2JpZChwbGF5ZXIsIG1lc3NhZ2UpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBzZWxmLnJvb20ucGxheV9jYXJkcyhwbGF5ZXIsIG1lc3NhZ2UpCgogICAgICAgIGV4Y2VwdCBDb25uZWN0aW9uRXJyb3I6CiAgICAgICAgICAgIGxvZ2dpbmcud2FybmluZyhmIlBsYXllciB7cGxheWVyLmlkfSBjb25uZWN0aW9uIGVycm9yLCByZW1vdmluZyBwbGF5ZXIiKQogICAgICAgICAgICBzZWxmLnJvb20ucmVtb3ZlX3BsYXllcihwbGF5ZXIpCiAgICAgICAgICAgIHJldHVybgoKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGxvZ2dpbmcuZXJyb3IoZiJQbGF5ZXIge3BsYXllci5pZH0gZXJyb3I6IHtzdHIoZSl9IikKICAgICAgICAgICAgc2VsZi5yb29tLnJlbW92ZV9wbGF5ZXIocGxheWVyKQogICAgICAgICAgICBicmVhawoKICAgIGNvbm4uY2xvc2UoKQpgYGAKCumAmui/h+S7peS4iuS/ruaUue+8jOWPr+S7peehruS/neWcqOS4ieS4queOqeWutuaIkOWKn+WKoOWFpeWQju+8jOa4uOaIj+S8mueri+WNs+W8gOWni+OAggpbW1tET05FXV1dCg==